# Generated by Django 3.0.6 on 2020-10-20 05:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commonname', models.CharField(max_length=25)),
                ('genusname', models.CharField(max_length=25)),
                ('speciesname', models.CharField(max_length=25)),
                ('type', models.CharField(choices=[('Bird', 'Bird'), ('Mammal', 'Mammal'), ('Reptile', 'Reptile'), ('Fish', 'Fish')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Habitat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=40)),
                ('habitattype', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Landuse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=40)),
                ('landusetype', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sitename', models.CharField(max_length=25)),
                ('area', models.FloatField(validators=[django.core.validators.MaxValueValidator(9999999999), django.core.validators.MinValueValidator(100)])),
                ('altitude', models.FloatField(validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(0)])),
                ('sitetype', models.CharField(choices=[('Strict Nature Reserve', 'Strict Nature Reserve'), ('National Park', 'National Park'), ('Wildlife Reserve', 'Wildlife Reserve'), ('State Reserve', 'State Reserve'), ('Hunting Reserve', 'Hunting Reserve')], max_length=30)),
                ('status', models.CharField(choices=[('Normal', 'Normal'), ('Threatend', 'Threatend')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='SiteHabitat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sitehabitatname', models.CharField(max_length=25)),
                ('area', models.FloatField(validators=[django.core.validators.MaxValueValidator(9999999999), django.core.validators.MinValueValidator(100)])),
                ('habitat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nzwetlands.Habitat')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nzwetlands.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sponsorname', models.CharField(max_length=25)),
                ('streetaddress', models.CharField(max_length=50)),
                ('suburb', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=25)),
                ('phonenumber', models.CharField(max_length=16)),
                ('email', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surveyname', models.CharField(max_length=25)),
                ('budget', models.FloatField(validators=[django.core.validators.MaxValueValidator(50000), django.core.validators.MinValueValidator(500)])),
                ('startdate', models.DateField()),
                ('enddate', models.DateField()),
                ('status', models.CharField(choices=[('Ratified', 'Ratified'), ('Unratified', 'Unratified')], max_length=10)),
                ('sponsor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nzwetlands.Sponsor')),
            ],
        ),
        migrations.CreateModel(
            name='Sitehabitatlanduse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impact', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=6)),
                ('landuse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nzwetlands.Landuse')),
                ('sitehabitat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nzwetlands.SiteHabitat')),
            ],
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Confirmed', 'Confirmed'), ('Unconfirmed', 'Unconfirmed')], max_length=11)),
                ('observationnumber', models.FloatField(validators=[django.core.validators.MaxValueValidator(300), django.core.validators.MinValueValidator(1)])),
                ('observationdate', models.DateField()),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nzwetlands.Animal')),
                ('sitehabitat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nzwetlands.SiteHabitat')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nzwetlands.Survey')),
            ],
        ),
    ]
